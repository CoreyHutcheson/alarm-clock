{"version":3,"sources":["App.module.scss","components/clock/style.module.scss","components/alarm-options/style.module.scss","components/app-buttons/style.module.scss","assets/alarm-clock-sound.mp3","components/app-buttons/Button.jsx","components/app-buttons/ButtonContainer.jsx","components/clock/Clock.jsx","components/alarm-options/AlarmOptions.jsx","components/alarm/OffButton.jsx","components/alarm/DeleteButton.jsx","components/alarm/AlarmSound.jsx","components/alarm/Alarm.jsx","utils/useCurrentTime.js","utils/getNewAlarmTime.js","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","scene","card","cardFace","cardFace__Front","cardFace__Back","isFlipped","time","time__Grid","option","spacer","buttonContainer","__webpack_require__","p","Button","_ref","icon","handleClick","react_default","a","createElement","onClick","react_fontawesome_index_es","ButtonContainer","props","handleShowAllClick","handleNewAlarmClick","showNewAlarmButton","showShowAllButton","className","styles","Button_Button","faThLarge","faPlus","defaultProps","Clock","grid","concat","toLocaleTimeString","hour","minute","second","Option","val","text","value","dangerouslySetInnerHTML","__html","formatHours","num","str","AlarmOptions","handleHourChange","handleMinuteChange","hourOptions","minuteOptions","i","push","name","onChange","map","AlarmOptions_Option","key","OffButton","alarmActive","setAlarmActive","containerClasses","DeleteButton","position","handleDeleteAlarmClick","faTimesCircle","AlarmSound","lib_default","url","audio","playStatus","Sound","status","PLAYING","loop","Alarm","showDeleteButton","currentTime","_useState","useState","Date","_useState2","Object","slicedToArray","setCurrentTime","useEffect","id","setInterval","clearInterval","useCurrentTime","alarmHours","setAlarmHours","_useState3","_useState4","alarmMinutes","setAlarmMinutes","_useState5","_useState6","alarmTime","setAlarmTime","_useState7","_useState8","diff","toUpperCase","hours","minutes","tempAlarmTime","setHours","dayOffset","setTime","getTime","getNewAlarmTime","Clock_Clock","AlarmOptions_AlarmOptions","e","target","OffButton_OffButton","AlarmSound_AlarmSound","DeleteButton_DeleteButton","App","alarms","setAlarms","cardIsFlipped","setCardIsFlipped","filter","el","length","Fragment","join","Alarm_Alarm","alarm","index","ButtonContainer_ButtonContainer","toConsumableArray","pos","includes","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.07ccfbd2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"scene\":\"App_scene__FuDBp\",\"card\":\"App_card__3QM3H\",\"cardFace\":\"App_cardFace___XpbL\",\"cardFace__Front\":\"App_cardFace__Front__1AZRg\",\"cardFace__Back\":\"App_cardFace__Back__uAW6n\",\"isFlipped\":\"App_isFlipped__1-c-G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"time\":\"style_time__1852m\",\"time__Grid\":\"style_time__Grid__2GMlH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"option\":\"style_option__3ht0r\",\"spacer\":\"style_spacer__2hmPA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonContainer\":\"style_buttonContainer__37cfw\"};","module.exports = __webpack_public_path__ + \"static/media/alarm-clock-sound.a5cd1537.mp3\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport const Button = ({ icon, handleClick }) => (\r\n  <div onClick={handleClick}>\r\n    <FontAwesomeIcon icon={icon} />\r\n  </div>\r\n);\r\n\r\nButton.propTypes = {\r\n  icon: PropTypes.object.isRequired,\r\n  handleClick: PropTypes.func.isRequired\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { faThLarge, faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { Button } from \"./Button.jsx\";\r\nimport styles from \"./style.module.scss\";\r\n\r\nexport const ButtonContainer = props => {\r\n  const {\r\n    handleShowAllClick,\r\n    handleNewAlarmClick,\r\n    showNewAlarmButton,\r\n    showShowAllButton\r\n  } = props;\r\n\r\n  return (\r\n    <div className={styles.buttonContainer}>\r\n      {showShowAllButton && (\r\n        <Button icon={faThLarge} handleClick={handleShowAllClick} />\r\n      )}\r\n\r\n      {showNewAlarmButton && (\r\n        <Button icon={faPlus} handleClick={handleNewAlarmClick} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nButtonContainer.defaultProps = {\r\n  showNewAlarmButton: true,\r\n  showShowAllButton: true\r\n};\r\n\r\nButtonContainer.propTypes = {\r\n  handleShowAllClick: PropTypes.func.isRequired,\r\n  handleNewAlarmClick: PropTypes.func.isRequired,\r\n  showNewAlarmButton: PropTypes.bool,\r\n  showShowAllButton: PropTypes.bool\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./style.module.scss\";\r\n\r\nexport const Clock = ({ time, grid }) => (\r\n  <div className={`${styles.time} ${grid ? styles.time__Grid : \"\"}`}>\r\n    {time.toLocaleTimeString(\"en-US\", {\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n      second: \"2-digit\"\r\n    })}\r\n  </div>\r\n);\r\n\r\nClock.propTypes = {\r\n  time: PropTypes.object.isRequired\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./style.module.scss\";\r\n\r\nconst Option = ({ val, text }) => (\r\n  <option\r\n    value={val}\r\n    className={styles.option}\r\n    dangerouslySetInnerHTML={{ __html: `${text}` }}\r\n  />\r\n);\r\n\r\nconst formatHours = num => {\r\n  if (num === 12) return \"12 PM\";\r\n  if (num === 24) return \"12 AM\";\r\n\r\n  const str = num < 12 ? `${num} AM` : `${num % 12} PM`;\r\n  return num < 10 || (num > 12 && num < 22) ? `&nbsp;&nbsp;${str}` : str;\r\n};\r\n\r\nexport const AlarmOptions = props => {\r\n  const { handleHourChange, handleMinuteChange } = props;\r\n  const hourOptions = [];\r\n  const minuteOptions = [];\r\n\r\n  for (let i = 1; i <= 23; i++) {\r\n    hourOptions.push(i);\r\n  }\r\n\r\n  for (let i = 0; i < 60; i++) {\r\n    minuteOptions.push(i);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <select name=\"hour\" onChange={handleHourChange}>\r\n        <option value=\"OFF\">&nbsp;&nbsp;OFF</option>\r\n\r\n        {hourOptions.map(val => (\r\n          <Option key={val} val={val} text={formatHours(val)} />\r\n        ))}\r\n\r\n        <option value=\"0\">12 AM</option>\r\n      </select>\r\n\r\n      <span className={styles.spacer}>:</span>\r\n\r\n      <select name=\"minutes\" onChange={handleMinuteChange}>\r\n        {minuteOptions.map(val => (\r\n          <Option key={val} val={val} text={val < 10 ? \"0\" + val : val} />\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nAlarmOptions.propTypes = {\r\n  handleHourChange: PropTypes.func.isRequired,\r\n  handleMinuteChange: PropTypes.func.isRequired\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const OffButton = ({ alarmActive, setAlarmActive }) => {\r\n  const containerClasses = `alarm-off-container ${\r\n    alarmActive ? \"alarm-off-container--active\" : \"\"\r\n  }`;\r\n\r\n  return (\r\n    <div className={containerClasses}>\r\n      <div className=\"alarm-off-button\" onClick={() => setAlarmActive(false)}>\r\n        ALARM OFF\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nOffButton.propTypes = {\r\n  alarmActive: PropTypes.bool.isRequired,\r\n  setAlarmActive: PropTypes.func.isRequired\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport \"./style.scss\";\r\n\r\nexport const DeleteButton = ({ position, handleDeleteAlarmClick, grid }) => {\r\n  return (\r\n    <div\r\n      className={`delete-button ${grid ? \"delete-button__grid\" : \"\"}`}\r\n      onClick={() => handleDeleteAlarmClick(position)}\r\n    >\r\n      <FontAwesomeIcon icon={faTimesCircle} />\r\n    </div>\r\n  );\r\n};\r\n\r\nDeleteButton.propTypes = {\r\n  position: PropTypes.string.isRequired,\r\n  handleDeleteAlarmClick: PropTypes.func.isRequired\r\n};\r\n","import React from \"react\";\r\nimport Sound from \"react-sound\";\r\n\r\nimport audio from \"assets/alarm-clock-sound.mp3\";\r\n\r\nexport const AlarmSound = () => (\r\n  <Sound url={audio} playStatus={Sound.status.PLAYING} loop={true} />\r\n);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Clock } from \"components/clock\";\r\nimport { AlarmOptions } from \"components/alarm-options\";\r\nimport { OffButton } from \"./OffButton.jsx\";\r\nimport { DeleteButton } from \"./DeleteButton.jsx\";\r\nimport { AlarmSound } from \"./AlarmSound.jsx\";\r\n\r\nimport { useCurrentTime } from \"utils/useCurrentTime.js\";\r\nimport { getNewAlarmTime } from \"utils/getNewAlarmTime.js\";\r\n\r\nimport \"./style.scss\";\r\n\r\nexport const Alarm = props => {\r\n  const { position, showDeleteButton, grid } = props;\r\n\r\n  const currentTime = useCurrentTime();\r\n  const [alarmHours, setAlarmHours] = useState(\"OFF\");\r\n  const [alarmMinutes, setAlarmMinutes] = useState(0);\r\n  const [alarmTime, setAlarmTime] = useState();\r\n  const [alarmActive, setAlarmActive] = useState(false);\r\n\r\n  // Sets off alarm by comparing currentTime and alarmTime\r\n  useEffect(() => {\r\n    const diff = currentTime - alarmTime;\r\n\r\n    if (diff > 0 && diff < 1000) {\r\n      setAlarmActive(true);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentTime]);\r\n\r\n  // Sets new alarm time whenever user changes alarm hours or minutes\r\n  useEffect(() => {\r\n    if (alarmHours.toUpperCase() === \"OFF\") {\r\n      return;\r\n    }\r\n\r\n    setAlarmTime(getNewAlarmTime(alarmHours, alarmMinutes, currentTime));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [alarmHours, alarmMinutes]);\r\n\r\n  return (\r\n    <div className={`alarm alarm__position--${position}`}>\r\n      <Clock time={currentTime} grid={grid} />\r\n\r\n      <AlarmOptions\r\n        handleHourChange={e => setAlarmHours(e.target.value)}\r\n        handleMinuteChange={e => setAlarmMinutes(e.target.value)}\r\n      />\r\n\r\n      {/* TODO: Debugging alarm function */}\r\n      <button onClick={() => setAlarmActive(true)}>Activate</button>\r\n\r\n      <OffButton alarmActive={alarmActive} setAlarmActive={setAlarmActive} />\r\n\r\n      {alarmActive && <AlarmSound />}\r\n\r\n      {showDeleteButton && <DeleteButton {...props} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nAlarm.defaultProps = {\r\n  showDeleteButton: false,\r\n  grid: false\r\n};\r\n\r\nAlarm.propTypes = {\r\n  position: PropTypes.string.isRequired,\r\n  showDeleteButton: PropTypes.bool.isRequired,\r\n  handleDeleteAlarmClick: PropTypes.func.isRequired\r\n};\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useCurrentTime = () => {\r\n  const [currentTime, setCurrentTime] = useState(new Date());\r\n\r\n  // Updates currentTime every second\r\n  useEffect(() => {\r\n    const id = setInterval(() => {\r\n      setCurrentTime(new Date());\r\n    }, 1000);\r\n\r\n    return () => clearInterval(id);\r\n  });\r\n\r\n  return currentTime;\r\n};\r\n","/**\r\n * Compares user set alarm hours/minutes to current time and returns newly set alarm Date\r\n * @param {number} hours - Selected hours option\r\n * @param {number} minutes - Selected minutes option\r\n * @param {object} currentTime - Current date/time\r\n */\r\nexport const getNewAlarmTime = (hours, minutes, currentTime) => {\r\n  const tempAlarmTime = new Date();\r\n  // Set the alarmHours and alarmMinutes that have been selected\r\n  tempAlarmTime.setHours(hours, minutes, 0);\r\n\r\n  // Check if time has already passed for that day\r\n  // If so, offset the day by 1, so the alarm is set for the next day.\r\n  const dayOffset = tempAlarmTime - currentTime > 0 ? 0 : 1;\r\n  tempAlarmTime.setTime(tempAlarmTime.getTime() + dayOffset * 86400000);\r\n\r\n  return new Date(tempAlarmTime);\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { ButtonContainer } from \"components/app-buttons\";\r\nimport { Alarm } from \"components/alarm\";\r\n\r\nimport styles from \"./App.module.scss\";\r\n\r\nconst App = () => {\r\n  const [alarms, setAlarms] = useState([\r\n    {\r\n      position: \"0\"\r\n    }\r\n  ]);\r\n  const [cardIsFlipped, setCardIsFlipped] = useState(false);\r\n\r\n  const handleShowAllClick = () => {\r\n    setCardIsFlipped(!cardIsFlipped);\r\n  };\r\n\r\n  const handleNewAlarmClick = () => {\r\n    if (alarms.length >= 5) return;\r\n\r\n    const getFirstOpenPosition = () => {\r\n      const possiblePositions = [\"0\", \"1\", \"2\", \"3\", \"4\"];\r\n\r\n      return possiblePositions.filter(pos => {\r\n        return !alarms.map(alarm => alarm.position).includes(pos);\r\n      })[0];\r\n    };\r\n\r\n    setAlarms([...alarms, { position: getFirstOpenPosition() }]);\r\n    setCardIsFlipped(true);\r\n  };\r\n\r\n  const handleDeleteAlarmClick = position => {\r\n    setAlarms(alarms.filter(el => el.position !== position));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (alarms.length === 1) {\r\n      setCardIsFlipped(false);\r\n    }\r\n  }, [alarms]);\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.scene}>\r\n        <div\r\n          className={`${styles.card} ${cardIsFlipped ? styles.isFlipped : \"\"}`}\r\n        >\r\n          <div className={[styles.cardFace, styles.cardFace__Front].join(\" \")}>\r\n            {/* Render first alarm */}\r\n            {\r\n              <Alarm\r\n                position={alarms[0].position}\r\n                handleDeleteAlarmClick={handleDeleteAlarmClick}\r\n                showDeleteButton={false}\r\n              />\r\n            }\r\n          </div>\r\n\r\n          <div className={[styles.cardFace, styles.cardFace__Back].join(\" \")}>\r\n            {/* Render remaining alarms */}\r\n            {alarms.map((alarm, index) => {\r\n              if (index === 0) return null;\r\n\r\n              return (\r\n                <Alarm\r\n                  key={alarm.position}\r\n                  position={alarm.position}\r\n                  handleDeleteAlarmClick={handleDeleteAlarmClick}\r\n                  showDeleteButton={true}\r\n                  grid={true}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <ButtonContainer\r\n        handleShowAllClick={handleShowAllClick}\r\n        handleNewAlarmClick={handleNewAlarmClick}\r\n        showNewAlarmButton={alarms.length < 5}\r\n        showShowAllButton={alarms.length > 1}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"utils/index.css\";\r\nimport App from \"./App.jsx\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}